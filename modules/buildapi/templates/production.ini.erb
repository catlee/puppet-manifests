####  This file under configuration management control
####  DO NOT EDIT MANUALLY
[DEFAULT]
#debug = true
# Uncomment and replace with the address which should receive any error reports
email_to = catlee@mozilla.com
smtp_server = localhost
error_email_from = buildapi@<%=fqdn%>

[server:main]
use = egg:Paste#http
host = 127.0.0.1
port = <%= scope::lookupvar('buildapi::settings::port') %>

[filter:proxy-prefix]
use = egg:PasteDeploy#prefix
prefix = /buildapi

[app:main]
use = egg:buildapi
full_stack = true
static_files = true
filter-with = proxy-prefix

cache_dir = %(here)s/data
beaker.session.key = buildapi
beaker.session.secret = <%=scope.lookupvar('secrets::buildapi_session_secret')%>

allowed_origins = https://tbpl.mozilla.org http://tbpl.mozilla.org http://tbpl.allizom.org http://tests.themasta.com http://dev.philringnalda.com http://bbpl.dbaron.org http://tbpl.mcc.id.au http://ehsanakhgari.org http://tbpl.swatinem.de https://tbpl-dev.allizom.org

# SQLAlchemy database URL and connection settings
sqlalchemy.scheduler_db.url = mysql://<%=scope.lookupvar('secrets::buildapi_schedulerdb_user')%>:<%=scope.lookupvar('secrets::buildapi_schedulerdb_password')%>@<%=scope.lookupvar('secrets::buildapi_schedulerdb_host')%>/<%=scope.lookupvar('secrets::buildapi_schedulerdb_database')%>
sqlalchemy.status_db.url = mysql://<%=scope.lookupvar('secrets::buildapi_statusdb_user')%>:<%=scope.lookupvar('secrets::buildapi_statusdb_password')%>@<%=scope.lookupvar('secrets::buildapi_statusdb_host')%>/<%=scope.lookupvar('secrets::buildapi_statusdb_database')%>
sqlalchemy.buildapi_db.url = sqlite:///%(here)s/buildapi.db
sqlalchemy.scheduler_db.pool_recycle = 60
sqlalchemy.status_db.pool_recycle = 60

# WARNING: *THE LINE BELOW MUST BE UNCOMMENTED ON A PRODUCTION ENVIRONMENT*
# Debug mode will enable the interactive debugging tool, allowing ANYONE to
# execute malicious code after an exception is raised.
set debug = false

# Carrot exchange parameters
carrot.hostname = <%=scope.lookupvar('secrets::buildapi_rmq_host')%>
carrot.exchange = buildapi.control
carrot.consumer.queue = buildapi-web2
carrot.userid = buildapi
carrot.password = <%=scope.lookupvar('secrets::buildapi_rmq_password')%>
carrot.vhost = /buildapi

# Where the various masters are
master_list = production-masters.json
masters_url = http://hg.mozilla.org/build/tools/raw-file/default/buildfarm/maintenance/production-masters.json

# What branches to handle
branches = mozilla-central, mozilla-2.1, mozilla-2.0, mozilla-1.9.2, mozilla-1.9.1, jaegermonkey, try, maple, cedar, birch, places, build-system, mozilla-beta, mozilla-aurora, devtools, graphics, services-central, alder, holly, larch, accessibility, profiling, mozilla-inbound, ux, mozilla-release, electrolysis, fx-team, ionmonkey, ash, elm, oak, pine, mozilla-esr10, addon-sdk

# What timezone we're in
timezone = US/Pacific

# How to connect to our memory cache
buildapi.cache = redis:<%=scope.lookupvar('secrets::buildapi_redis_host')%>

# Logging configuration
[loggers]
keys = root, routes, buildapi, sqlalchemy, buildapi_access

[handlers]
keys = console, access

[formatters]
keys = generic

[logger_root]
level = INFO
handlers = console

[logger_routes]
level = INFO
handlers =
qualname = routes.middleware
# "level = DEBUG" logs the route matched and routing variables.

[logger_buildapi]
level = INFO
handlers =
qualname = buildapi

[logger_buildapi_access]
level = INFO
handlers = access
qualname = buildapi.access

[logger_sqlalchemy]
level = INFO
handlers =
qualname = sqlalchemy.engine
# "level = INFO" logs SQL queries.
# "level = DEBUG" logs SQL queries and results.
# "level = WARN" logs neither.  (Recommended for production systems.)

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[handler_access]
class = FileHandler
args = ("access.log",)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(asctime)s,%(msecs)03d %(levelname)-5.5s [%(name)s] [%(threadName)s] %(message)s
datefmt = %Y-%m-%d %H:%M:%S
