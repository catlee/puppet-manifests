#! /bin/bash
# initscript for buildbot

####  This file under configuration management control
####  DO NOT EDIT MANUALLY

# chkconfig: 2345 50 08
### BEGIN INIT INFO
# Provides:          buildbot
# Required-Start:    $local_fs $network
# Should-Start:      $remote_fs 
# Should-Stop:       $remote_fs
# Default-Start:     2 3 4 5
# Default-Stop:      K 0 1 6
# Short-Description: Buildbot
# Description:       Buildbot
### END INIT INFO

# Required-Stop:     $local_fs
PATH=/sbin:/bin:/usr/sbin:/usr/bin
DESC="Buildbot"

USER=cltbld

DAEMON=/usr/bin/make
LOCKFILE=/var/lock/subsys/buildbot

test -x ${DAEMON} || exit 0

. /lib/lsb/init-functions

start_buildbot() {
    BASEDIR="$1"

    su -s /bin/bash -c "${DAEMON} -C ${BASEDIR} start" - ${USER}
    return $?
}

stop_buildbot() {
    BASEDIR="$1"

    su -s /bin/bash -c "${DAEMON} -C ${BASEDIR} stop" - ${USER}
    return $?
}

do_start () {
    errors=0
    for d in /etc/default/buildbot.d/*; do
	name=$(basename $d)
	buildbot_path=$(cat $d)

	echo "Starting buildbot $name"
	if start_buildbot "$buildbot_path"; then
	    echo "started"
	else
	    echo "not started"
	    errors=$(($errors+1))
	fi
    done
    if [ $errors == "0" ]; then
        touch ${LOCKFILE}
    fi
    return $errors
}

do_stop () {
    errors=0
    for d in /etc/default/buildbot.d/*; do
	name=$(basename $d)
	buildbot_path=$(cat $d)

	echo "Stopping buildbot $name"
	if stop_buildbot "$buildbot_path"; then
	    echo "stopped"
	else
	    echo "not stopped"
	    errors=$(($errors+1))
	fi
    done
    if [ $errors == "0" ]; then
        rm ${LOCKFILE}
    fi
    return $errors
}

case "$1" in
  start)
  	do_start
  	exit $?
	;;
  stop)
  	do_stop
  	exit $?
	;;
  *)
	log_warning_msg "Usage: $0 {start|stop}"
	exit 1
	;;
esac

exit 0

